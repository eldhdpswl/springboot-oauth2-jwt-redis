### 현제 profile이 local일떄 실행하는 설정이다.
Spring:
  # 데이터 소스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3307/demo_momo
    username: demo_momo
    password:
  # JPA 설정
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
#    hibernate:
#      # 테스트한 내용을 남겨놓고 싶으면 update 또는 none
#      ddl-auto: create # test를 위해 create했음, 보통은 none을 함
#    show-sql: false  # 실제로 Query문이 작동될떄 로그상 보여주기
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect # mysql 사용을 hibernate에게 알려준다.
  # Security OAuth
  security:
    oauth2.client:
      registration:
#        google:
#          clientId: '{구글 client-id}'
#          clientSecret: '{구글 client-secret}'
#          scope:
#            - email
#            - profile
#        facebook:
#          clientId: '{페이스북 client-id}'
#          clientSecret: '{페이스북 client-secret}'
#          scope:
#            - email
#            - public_profile
        naver:
          clientId: 3aToNYbm7kIzIsveGtQf
          clientSecret: n8jRHDOqwM
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          #localhost:8080/login/oauth2/code/naver
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: e72784369955445d5b54cdc098aedb8d
          clientSecret: mHF6xaDdzuAhmLOJsPsMFXFReRzB86ET
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response   #네이버가 회원정보를 json으로 넘겨주는데, response라는 키값으로 리턴해준다.
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id


# cors 설정
cors:
  allowed-origins: 'http://localhost:3000'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

# jwt secret key 설정
jwt.secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOds'

# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth/redirect
